{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","role","deafultProps","App","setmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ae97c5fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n// import About from './About'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\" >About</a>\r\n        </li> */}\r\n        \r\n        \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode}  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\ntitle : PropTypes.string\r\n}\r\n\r\nNavbar.deafultProps={\r\n    title:'set title here'\r\n}","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('Enter the text here');\r\n    //    text=\"new text\" //wrong way to change the text\r\n    //    setText(\"new text\")  //correct way to change the text\r\n\r\n    const handleupclick = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n    const handleonchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const handlelowclick = (event) => {\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n    }\r\n    const clearText= (event) => {\r\n        let newtext =\"\";\r\n        setText(newtext);\r\n    }\r\n    const copytext= (event) => {\r\n        var text =document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const Removespace= (event) => {\r\n        let newtext =text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n    }\r\n    return (<>\r\n        <div className=\"container\"  style={{color :props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\" style={{color :props.mode==='dark'?'white':'black'}}>\r\n\r\n                <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleonchange} style={{backgroundColor :props.mode==='dark'?'#1e1b25':'white' ,color:props.mode==='dark'?'white':'black'}} rows=\"10\"></textarea>\r\n                <button className=\"btn btn-primary mt-3 \" onClick={handleupclick} >Convert to uppercase</button>\r\n                <button className=\"btn btn-primary mt-3 mx-2 \" onClick={handlelowclick} >Convert to lowercase</button>\r\n                <button className=\"btn btn-primary mt-3 mx-2 \" onClick={clearText} >Clear text</button>\r\n                <button className=\"btn btn-primary mt-3 mx-2 \" onClick={copytext} >Copy text</button>\r\n                <button className=\"btn btn-primary mt-3 mx-2 \" onClick={Removespace} >Remove extra spcaces</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\" style={{color :props.mode==='dark'?'white':'black'}}>\r\n            <h1>your text summary </h1>\r\n            <p>Number of words are {text.split(\" \").length}  and  number of characters are {text.length}</p>\r\n                    </div>\r\n        </>\r\n    )\r\n}\r\n","import React  from 'react'\r\n\r\nexport default function Alert() {\r\n   \r\n    return (\r\n      \r\n\r\n    <div className=\"alert alert-secondary alert-dismissible fade show\" role=\"alert\">\r\n  <strong>Welcome to Text Utilizer !</strong> \r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n       \r\n       \r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\nconst [mode, setmode] = useState('light');\nconst togglemode=()=>{\n\n  if (mode=== 'light') {\n   setmode('dark'); \n   document.body.style.backgroundColor='rgb(7 0 23)';\n  }\n  \n  else{\n    setmode('light');\n   document.body.style.backgroundColor='white';\n\n\n  }\n}\n  return (<>\n{/* <Router> */}\n<Navbar title=\"Text Utilizer\"  mode={mode} togglemode={togglemode} />\n<Alert/>\n<div className=\"container my-4\">\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n<TextForm heading=\"Write a Text to analyze\" mode={mode} />\n            \n          {/* </Route> */}\n        {/* </Switch> */}\n\n{/* <About/> */}\n</div>\n{/* // </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}